"""
Telegram –±–æ—Ç –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö
"""
import asyncio
from typing import Optional
from telegram import Update, Chat
from telegram.ext import Application, MessageHandler, CommandHandler, ContextTypes, filters
from telegram.constants import ChatType
from loguru import logger

from config import config
from bot_service import bot_service
from models import db_manager


class TelegramBot:
    """–ö–ª–∞—Å—Å Telegram –±–æ—Ç–∞"""
    
    def __init__(self):
        self.application = None
        self.bot_username = None
        logger.info("ü§ñ TelegramBot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        chat = update.effective_chat
        
        if chat.type == ChatType.PRIVATE:
            welcome_message = f"""
ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø {config.bot_name}!

–Ø —É–º–Ω—ã–π –±–æ—Ç –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤. –î–æ–±–∞–≤—å –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É, –∏ —è –±—É–¥—É:
üìù –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã
üí¨ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
üìä –°–æ—Ö—Ä–∞–Ω—è—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
‚Ä¢ –û—Ç–≤–µ—á–∞—é –ø—Ä–∏–º–µ—Ä–Ω–æ —Ä–∞–∑ –≤ {config.response_frequency} —Å–æ–æ–±—â–µ–Ω–∏–π
‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ {config.max_context_messages} —Å–æ–æ–±—â–µ–Ω–∏–π
‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è—é –≤—Å—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –≤ –ë–î

–ö–æ–º–∞–Ω–¥—ã:
/start - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞ (—Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö)
/help - –ø–æ–º–æ—â—å

–î–æ–±–∞–≤—å –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É –∏ –Ω–∞—á–Ω–µ–º! üöÄ
"""
        else:
            welcome_message = f"""
ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø {config.bot_name} –≥–æ—Ç–æ–≤ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≤–∞—à–µ–º —á–∞—Ç–µ!

–ü—Ä–æ—Å—Ç–æ –æ–±—â–∞–π—Ç–µ—Å—å, –∞ —è –±—É–¥—É —É–º–Ω–æ –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –±–µ—Å–µ–¥–µ.
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stats –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
"""
        
        await update.message.reply_text(welcome_message)
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = f"""
ü§ñ {config.bot_name} - –ü–æ–º–æ—â—å

üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –±–µ—Å–µ–¥—ã
‚Ä¢ –£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ —Ç–µ–º–µ
‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å —á–∞—Å—Ç–æ—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏

üìã –ö–æ–º–∞–Ω–¥—ã:
/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

‚öôÔ∏è –ö–∞–∫ —è —Ä–∞–±–æ—Ç–∞—é:
1. –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ {config.max_context_messages} —Å–æ–æ–±—â–µ–Ω–∏–π
2. –û–ø—Ä–µ–¥–µ–ª—è—é —Ç–µ–º—É –∏ —Ç–æ–Ω –±–µ—Å–µ–¥—ã
3. –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å —á—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å
4. –°–æ—Ö—Ä–∞–Ω—è—é –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –ë–î –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏

üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
‚Ä¢ –ß–∞—Å—Ç–æ—Ç–∞ –æ—Ç–≤–µ—Ç–æ–≤: ~1 —Ä–∞–∑ –≤ {config.response_frequency} —Å–æ–æ–±—â–µ–Ω–∏–π
‚Ä¢ –ú–∏–Ω–∏–º—É–º —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {config.min_context_messages}

–°–æ–∑–¥–∞–Ω —Å ‚ù§Ô∏è –¥–ª—è —É–º–Ω–æ–≥–æ —É—á–∞—Å—Ç–∏—è –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö!
"""
        await update.message.reply_text(help_text)
    
    async def stats_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
        chat = update.effective_chat
        
        if chat.type == ChatType.PRIVATE:
            await update.message.reply_text(
                "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö!"
            )
            return
        
        try:
            stats = bot_service.get_chat_stats(str(chat.id))
            
            if not stats:
                await update.message.reply_text(
                    "üìä –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–∞—Ç—å—Å—è!"
                )
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats_text = f"""
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞ "{chat.title}"

üî¢ –û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ:
‚Ä¢ –í—Å–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π: {stats['total_interactions']}
‚Ä¢ –û—Ç–≤–µ—Ç–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {stats['responses_generated']}
‚Ä¢ –ß–∞—Å—Ç–æ—Ç–∞ –æ—Ç–≤–µ—Ç–æ–≤: {stats['response_rate']:.1%}

üòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –≤ —á–∞—Ç–µ:
‚Ä¢ –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ: {stats['sentiment_distribution']['positive']}
‚Ä¢ –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ: {stats['sentiment_distribution']['neutral']}
‚Ä¢ –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ: {stats['sentiment_distribution']['negative']}

üè∑Ô∏è –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã:
"""
            
            for i, (topic, count) in enumerate(stats['popular_topics'][:5], 1):
                stats_text += f"{i}. {topic} ({count} —Ä–∞–∑)\n"
            
            # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º —á–∞—Ç–∞–º
            total_interactions = db_manager.get_total_interactions()
            stats_text += f"\nüåç –í—Å–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π –≤–æ –≤—Å–µ—Ö —á–∞—Ç–∞—Ö: {total_interactions}"
            
            await update.message.reply_text(stats_text)
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            await update.message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
            )
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        message = update.message
        chat = update.effective_chat
        user = update.effective_user
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≥—Ä—É–ø–ø—ã –∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã
        if chat.type not in [ChatType.GROUP, ChatType.SUPERGROUP]:
            return
        
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤
        if user.is_bot:
            return
        
        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
        if message.text and message.text.startswith('/'):
            return
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
            chat_id = str(chat.id)
            chat_title = chat.title or "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"
            message_text = message.text or ""
            user_id = str(user.id) if user else None
            username = user.username if user else None
            
            logger.info(f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ '{chat_title}' –æ—Ç @{username}: {message_text[:50]}...")
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–∞—à —Å–µ—Ä–≤–∏—Å
            bot_response = await bot_service.process_message(
                chat_id=chat_id,
                chat_title=chat_title,
                message_text=message_text,
                user_id=user_id,
                username=username
            )
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–≤–µ—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
            if bot_response:
                await message.reply_text(bot_response)
                logger.info(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ '{chat_title}': {bot_response[:50]}...")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    
    async def error_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {context.error}")
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        # –ö–æ–º–∞–Ω–¥—ã
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(CommandHandler("stats", self.stats_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.application.add_handler(
            MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message)
        )
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        self.application.add_error_handler(self.error_handler)
        
        logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    async def start_bot(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        try:
            logger.info("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            self.application = Application.builder().token(config.telegram_bot_token).build()
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            self.setup_handlers()
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
            bot_info = await self.application.bot.get_me()
            self.bot_username = bot_info.username
            
            logger.info(f"‚úÖ –ë–æ—Ç @{self.bot_username} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            logger.info(f"üîó –î–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É: https://t.me/{self.bot_username}")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º polling
            await self.application.run_polling(
                allowed_updates=["message", "edited_message"],
                drop_pending_updates=True
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
            raise
    
    async def stop_bot(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        if self.application:
            await self.application.stop()
            logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
telegram_bot = TelegramBot()

if __name__ == "__main__":
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–∑–æ–≤–µ —Ñ–∞–π–ª–∞"""
    import asyncio
    
    try:
        asyncio.run(telegram_bot.start_bot())
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}") 