"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""
from datetime import datetime, timedelta
import random
from models import db_manager, ChatInteraction

def create_demo_data():
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ"""
    
    # –î–µ–º–æ-—á–∞—Ç—ã
    demo_chats = [
        {"chat_id": "-1001234567890", "chat_title": "–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"},
        {"chat_id": "-1001234567891", "chat_title": "–û–±—â–∏–π —á–∞—Ç"},
        {"chat_id": "-1001234567892", "chat_title": "–û–±—Å—É–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤"},
        {"chat_id": "-1001234567893", "chat_title": "–ì–µ–π–º–µ—Ä—ã"},
    ]
    
    # –î–µ–º–æ-—Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–µ–º
    demo_topics = {
        "—Ä–∞–±–æ—Ç–∞": {
            "messages": [
                "–ö–æ–≥–¥–∞ –¥–µ–¥–ª–∞–π–Ω –ø—Ä–æ–µ–∫—Ç–∞?",
                "–ù—É–∂–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É",
                "–ö–æ–¥ —Ä–µ–≤—å—é –≥–æ—Ç–æ–≤",
                "–í—Å—Ç—Ä–µ—á–∞ –≤ 15:00",
                "–ë–∞–≥–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
            ],
            "responses": [
                "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–∞! üëè",
                "–ú–æ–∂–µ—Ç —Å—Ç–æ–∏—Ç –æ–±—Å—É–¥–∏—Ç—å —ç—Ç–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ?",
                "–Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º",
                "–•–æ—Ä–æ—à–∞—è –∏–¥–µ—è! üí°",
                "–î–∞–≤–∞–π—Ç–µ —Å–æ–∑–≤–æ–Ω–∏–º—Å—è"
            ]
        },
        "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏": {
            "messages": [
                "–ß—Ç–æ –¥—É–º–∞–µ—Ç–µ –æ –Ω–æ–≤–æ–º Python 3.12?",
                "FastAPI –∏–ª–∏ Django?",
                "–ö—Ç–æ –ø—Ä–æ–±–æ–≤–∞–ª Claude API?",
                "Kubernetes —Å–ª–æ–∂–Ω—ã–π?",
                "AI —Ä–µ–≤–æ–ª—é—Ü–∏—è –Ω–∞—á–∞–ª–∞—Å—å"
            ],
            "responses": [
                "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è! üöÄ",
                "–ü—Ä–æ–±–æ–≤–∞–ª, –æ—á–µ–Ω—å –∫—Ä—É—Ç–æ!",
                "–ï—Å—Ç—å —Å–≤–æ–∏ –ø–ª—é—Å—ã –∏ –º–∏–Ω—É—Å—ã",
                "–°–æ–≥–ª–∞—Å–µ–Ω, –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω–æ",
                "–ù—É–∂–Ω–æ –∏–∑—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ"
            ]
        },
        "–æ–±—â–µ–Ω–∏–µ": {
            "messages": [
                "–ö–∞–∫ –¥–µ–ª–∞?",
                "–•–æ—Ä–æ—à–∏—Ö –≤—ã—Ö–æ–¥–Ω—ã—Ö!",
                "–ü–æ–≥–æ–¥–∞ –æ—Ç–ª–∏—á–Ω–∞—è",
                "–ö—Ç–æ –≤ –∫–∏–Ω–æ?",
                "–í—Å—Ç—Ä–µ—Ç–∏–º—Å—è –∑–∞–≤—Ç—Ä–∞"
            ],
            "responses": [
                "–û—Ç–ª–∏—á–Ω–æ, —Å–ø–∞—Å–∏–±–æ! üòä",
                "–ò –≤–∞–º —Ö–æ—Ä–æ—à–∏—Ö!",
                "–î–∞, —Å–æ–ª–Ω—ã—à–∫–æ —Ä–∞–¥—É–µ—Ç",
                "–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º!",
                "–î–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å! üëç"
            ]
        }
    }
    
    sentiments = ["positive", "neutral", "negative"]
    sentiment_weights = [0.6, 0.3, 0.1]  # –ë–æ–ª—å—à–µ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö
    
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
    for i in range(50):
        # –°–ª—É—á–∞–π–Ω—ã–π —á–∞—Ç
        chat = random.choice(demo_chats)
        
        # –°–ª—É—á–∞–π–Ω–∞—è —Ç–µ–º–∞
        topic_name = random.choice(list(demo_topics.keys()))
        topic_data = demo_topics[topic_name]
        
        # –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        days_ago = random.randint(0, 7)
        hours_ago = random.randint(0, 23)
        timestamp = datetime.now() - timedelta(days=days_ago, hours=hours_ago)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
        context_messages = random.sample(topic_data["messages"], k=random.randint(3, 5))
        
        # –†–µ—à–∞–µ–º, –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ª–∏ –æ—Ç–≤–µ—Ç
        response_generated = random.random() < 0.4  # 40% —à–∞–Ω—Å –æ—Ç–≤–µ—Ç–∞
        bot_response = None
        
        if response_generated:
            bot_response = random.choice(topic_data["responses"])
        
        # –°–ª—É—á–∞–π–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
        sentiment = random.choices(sentiments, weights=sentiment_weights)[0]
        
        # –°–æ–∑–¥–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
        interaction_data = {
            'chat_id': chat["chat_id"],
            'chat_title': chat["chat_title"],
            'context_messages': context_messages,
            'detected_topic': topic_name,
            'sentiment': sentiment,
            'bot_response': bot_response,
            'response_generated': response_generated,
            'participants_count': random.randint(3, 12)
        }
        
        try:
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
            interaction = ChatInteraction.from_dict(interaction_data)
            interaction.timestamp = timestamp
            
            session = db_manager.get_session()
            session.add(interaction)
            session.commit()
            session.close()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏: {e}")
    
    print("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!")
    print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –ë–î: {db_manager.get_total_interactions()}")


if __name__ == "__main__":
    create_demo_data()